class_name CCu02StardustBoost
extends Upgrade
## CCu02 Upgrade increased amount of Stardust created per second

## Max level
const max_level : int = 5

## Init values
func _init() -> void:
	level = Game.ref.data.cc_upgrades.u_02_stardust_boost_level
	base_cost = 1
	cost = 1
	
	if not is_unlocked():
		HandlerCCUpgrades.ref.u_01_stardust_generation.leveled_up.connect(_on_ccu01_level_up)

## Returns description
func get_description() -> String:
	var text : String = "Increases amount of Stardust generated by the universe"
	text += "\n[b]Effects: [/b] +1 stardust / sec"
	if level < max_level:
		text += "\n[b]Cost:[/b] %s Consciousness Cores" % cost

	return text

## Returns current cost
func calculate_cost() -> void:
	printerr("Calculate cost not defined")
	assert(false)

## Virtual function - Calculates whether an upgrade is able to be purchased
func can_afford() -> bool:
	return level < max_level && Game.ref.data.consciousness_core >= cost

## Virtual function - Consumes CC to level up
func level_up() -> void:
	if !can_afford():
		return
	var error : Error = HandlerConsciousnessCore.ref.consume_concsiousness_core(cost)
	if error:
		return
	
	level += 1
	Game.ref.data.cc_upgrades.u_02_stardust_boost_level = true
	# Increase leel in Data Reasource
	leveled_up.emit()
	HandlerCCUpgrades.ref.upgrade_leveled_up.emit(self)
	HandlerCCUpgrades.ref.u_02_stardust_boost.leveled_up.emit(self)

## Returns whether upgrade is unlocked
func is_unlocked() -> bool:
	return Game.ref.data.cc_upgrades.u_01_stardust_generation_level

## Triggered when CCU01 is purchased. Unlocks this upgrade
func _on_ccu01_level_up() -> void:
	HandlerCCUpgrades.ref.u_01_stardust_generation.leveled_up.disconnect(_on_ccu01_level_up)
	HandlerCCUpgrades.ref.upgrade_unlocked.emit(self)

## Returns upgrade title
func title() -> String:
	var text : String = "Stardust Generator Efficiency"
	text += " %s" % int_to_roman(level)
	return text
